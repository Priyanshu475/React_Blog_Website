{"ast":null,"code":"var _jsxFileName = \"/home/priyanshu/Desktop/WEBD/React/Tut3/src/Home.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport BlogList from \"./BlogList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [blogs, setBlogs] = useState(null);\n  function handleDelete(id) {\n    const newBlogs = blogs.filter(blog => blog.id !== id);\n    setBlogs(newBlogs);\n  }\n\n  // using fetch data with useeffect\n\n  // once fetched we get a repsonse object we need to convert it to json\n  useEffect(() => {\n    fetch(\"http://localhost:8000/blogs\").then(res => {\n      return res.json();\n    }).then(data => {\n      setBlogs(data);\n    });\n  }, []);\n\n  // if name chnages it will run the useeffect\n\n  // we will use fetch data to fetch from db.json\n  //  /blogs GET Fetche all blogs\n  // /blogs POST Add a new blog\n  // /blogs/:id GET Fetch a single blog\n  //blogs/:id DELETE Delete a single blog\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: blogs && /*#__PURE__*/_jsxDEV(BlogList, {\n      blogs: blogs,\n      title: \"All Blogs!!!\",\n      handleDelete: handleDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 19\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"mx2kJzEegt6MX23WNOCoHA4Kuvk=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useState","useEffect","BlogList","jsxDEV","_jsxDEV","Home","_s","blogs","setBlogs","handleDelete","id","newBlogs","filter","blog","fetch","then","res","json","data","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/priyanshu/Desktop/WEBD/React/Tut3/src/Home.js"],"sourcesContent":["import { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport BlogList from \"./BlogList\";\n\nconst Home = () => {\nconst [blogs,setBlogs]=useState(null)\n\nfunction handleDelete(id){\n    const newBlogs=blogs.filter(blog=>blog.id!==id);\n    setBlogs(newBlogs);\n}\n\n\n// using fetch data with useeffect\n\n// once fetched we get a repsonse object we need to convert it to json\nuseEffect(()=>{\n    fetch(\"http://localhost:8000/blogs\")\n    .then(res=>{\n        return res.json();\n    })\n    .then(data=>{\n        setBlogs(data);\n    }\n    );\n},[]);\n \n\n// if name chnages it will run the useeffect\n\n\n\n// we will use fetch data to fetch from db.json\n//  /blogs GET Fetche all blogs\n// /blogs POST Add a new blog\n// /blogs/:id GET Fetch a single blog\n//blogs/:id DELETE Delete a single blog\n\n\n\nreturn (\n    <div className=\"home\">\n        {blogs && <BlogList blogs={blogs} title=\"All Blogs!!!\" handleDelete={handleDelete}/>}\n    </div>\n);\n}\n\n\nexport default Home;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,SAAS,QAAQ,OAAO;AACjC,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,KAAK,EAACC,QAAQ,CAAC,GAACR,QAAQ,CAAC,IAAI,CAAC;EAErC,SAASS,YAAYA,CAACC,EAAE,EAAC;IACrB,MAAMC,QAAQ,GAACJ,KAAK,CAACK,MAAM,CAACC,IAAI,IAAEA,IAAI,CAACH,EAAE,KAAGA,EAAE,CAAC;IAC/CF,QAAQ,CAACG,QAAQ,CAAC;EACtB;;EAGA;;EAEA;EACAV,SAAS,CAAC,MAAI;IACVa,KAAK,CAAC,6BAA6B,CAAC,CACnCC,IAAI,CAACC,GAAG,IAAE;MACP,OAAOA,GAAG,CAACC,IAAI,CAAC,CAAC;IACrB,CAAC,CAAC,CACDF,IAAI,CAACG,IAAI,IAAE;MACRV,QAAQ,CAACU,IAAI,CAAC;IAClB,CACA,CAAC;EACL,CAAC,EAAC,EAAE,CAAC;;EAGL;;EAIA;EACA;EACA;EACA;EACA;;EAIA,oBACId,OAAA;IAAKe,SAAS,EAAC,MAAM;IAAAC,QAAA,EAChBb,KAAK,iBAAIH,OAAA,CAACF,QAAQ;MAACK,KAAK,EAAEA,KAAM;MAACc,KAAK,EAAC,cAAc;MAACZ,YAAY,EAAEA;IAAa;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnF,CAAC;AAEV,CAAC;AAAAnB,EAAA,CAzCKD,IAAI;AAAAqB,EAAA,GAAJrB,IAAI;AA4CV,eAAeA,IAAI;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}