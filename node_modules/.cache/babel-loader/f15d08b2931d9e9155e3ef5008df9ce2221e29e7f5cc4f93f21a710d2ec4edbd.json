{"ast":null,"code":"var _jsxFileName = \"/home/priyanshu/Desktop/WEBD/React/TUT4/src/BlogDetails.js\",\n  _s = $RefreshSig$();\nimport { useParams } from \"react-router-dom\";\nimport useFetch from \"./useFetch\";\n\n// how to get the id from the url\n// we can use useParams hook\n// useParams hook is used to get the parameters from the url\n// useParams hook is a part of the react-router-dom library.\n// useParams hook returns an object with a property called id.\n// The id property will be the value of the id parameter in the URL.\n// The id property will be a string.\n\n// using fetch to get the data from the server\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BlogDetails = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const {\n    data: blog,\n    isPending,\n    error\n  } = useFetch('http://localhost:8000/blogs/' + id);\n  const handleClick = () => {\n    fetch('http://localhost:8000/blogs' + blog.id, {\n      method: 'DELETE'\n    }).then(() => {});\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Blog-details\",\n    children: [isPending && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 27\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 23\n    }, this), blog && /*#__PURE__*/_jsxDEV(\"article\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: blog.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Written by \", blog.author]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: blog.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        children: \"delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(BlogDetails, \"EVIsnvxcIf1jilWLXA45A4OWKXY=\", false, function () {\n  return [useParams, useFetch];\n});\n_c = BlogDetails;\nexport default BlogDetails;\n\n// if want the bwrooswer to come here when /blig/123 is typed\nvar _c;\n$RefreshReg$(_c, \"BlogDetails\");","map":{"version":3,"names":["useParams","useFetch","jsxDEV","_jsxDEV","BlogDetails","_s","id","data","blog","isPending","error","handleClick","fetch","method","then","className","children","fileName","_jsxFileName","lineNumber","columnNumber","title","author","body","onClick","_c","$RefreshReg$"],"sources":["/home/priyanshu/Desktop/WEBD/React/TUT4/src/BlogDetails.js"],"sourcesContent":["import { useParams } from \"react-router-dom\";\nimport useFetch from \"./useFetch\";\n\n// how to get the id from the url\n// we can use useParams hook\n// useParams hook is used to get the parameters from the url\n// useParams hook is a part of the react-router-dom library.\n// useParams hook returns an object with a property called id.\n// The id property will be the value of the id parameter in the URL.\n// The id property will be a string.\n\n\n\n// using fetch to get the data from the server\n\n\n\n\n\nconst BlogDetails = () => {\n    const {id} = useParams();\n    const {data:blog, isPending, error} = useFetch('http://localhost:8000/blogs/' + id);\n\n\nconst handleClick=()=>{\n    fetch('http://localhost:8000/blogs'+blog.id,{\n        method:'DELETE'\n    }).then(()=>{\n        \n    })\n}\n\n    return (  \n        <div className=\"Blog-details\">\n            {isPending && <div>Loading...</div>}\n            {error && <div>{error}</div>}\n            {blog && (\n                <article>\n                    <h2>{blog.title}</h2>\n                    <p>Written by {blog.author}</p>\n                    <div>{blog.body}</div>\n                    <button onClick={handleClick}>delete</button>\n                </article>\n            )}\n        </div>\n    );\n}\n \nexport default BlogDetails;\n\n\n\n\n// if want the bwrooswer to come here when /blig/123 is typed"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,QAAQ,MAAM,YAAY;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAMA,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM;IAACC;EAAE,CAAC,GAAGN,SAAS,CAAC,CAAC;EACxB,MAAM;IAACO,IAAI,EAACC,IAAI;IAAEC,SAAS;IAAEC;EAAK,CAAC,GAAGT,QAAQ,CAAC,8BAA8B,GAAGK,EAAE,CAAC;EAGvF,MAAMK,WAAW,GAACA,CAAA,KAAI;IAClBC,KAAK,CAAC,6BAA6B,GAACJ,IAAI,CAACF,EAAE,EAAC;MACxCO,MAAM,EAAC;IACX,CAAC,CAAC,CAACC,IAAI,CAAC,MAAI,CAEZ,CAAC,CAAC;EACN,CAAC;EAEG,oBACIX,OAAA;IAAKY,SAAS,EAAC,cAAc;IAAAC,QAAA,GACxBP,SAAS,iBAAIN,OAAA;MAAAa,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EAClCV,KAAK,iBAAIP,OAAA;MAAAa,QAAA,EAAMN;IAAK;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EAC3BZ,IAAI,iBACDL,OAAA;MAAAa,QAAA,gBACIb,OAAA;QAAAa,QAAA,EAAKR,IAAI,CAACa;MAAK;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACrBjB,OAAA;QAAAa,QAAA,GAAG,aAAW,EAACR,IAAI,CAACc,MAAM;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC/BjB,OAAA;QAAAa,QAAA,EAAMR,IAAI,CAACe;MAAI;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACtBjB,OAAA;QAAQqB,OAAO,EAAEb,WAAY;QAAAK,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CACZ;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAAf,EAAA,CA3BKD,WAAW;EAAA,QACAJ,SAAS,EACgBC,QAAQ;AAAA;AAAAwB,EAAA,GAF5CrB,WAAW;AA6BjB,eAAeA,WAAW;;AAK1B;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}