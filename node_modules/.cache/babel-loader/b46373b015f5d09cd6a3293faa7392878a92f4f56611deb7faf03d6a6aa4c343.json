{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nconst useFetch = url => {\n  _s();\n  const [data, setData] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // abort controller\n    const abortCont = new AbortController(); // this is used to stop the fetching of data when we switch the page\n\n    setTimeout(() => {\n      fetch(url, {\n        signal: abortCont.signal\n      }).then(res => {\n        if (!res.ok) {\n          // error coming back from server\n          throw Error('could not fetch the data for that resource');\n        }\n        return res.json();\n      }).then(data => {\n        setIsPending(false);\n        setData(data);\n        setError(null);\n      }).catch(err => {\n        // auto catches network / connection error\n        if (err.name === 'AbortError') {\n          console.log('fetch aborted');\n        }\n        setIsPending(false);\n        setError(err.message);\n      });\n    }, 1000);\n    return () => abortCont.abort(); // cleanup function\n  }, [url]);\n  return {\n    data,\n    isPending,\n    error\n  };\n};\n_s(useFetch, \"VxPkICXS4AfkXU1R8tuEJAA8e58=\");\nexport default useFetch;\n\n// uwe will use cleanup function to stop the fetching of data when we switch the page\n\n// abort controller is used to stop the fetching of data when we switch the page","map":{"version":3,"names":["useState","useEffect","useFetch","url","_s","data","setData","isPending","setIsPending","error","setError","abortCont","AbortController","setTimeout","fetch","signal","then","res","ok","Error","json","catch","err","name","console","log","message","abort"],"sources":["/home/priyanshu/Desktop/WEBD/React/TUT4/src/useFetch.js"],"sourcesContent":["\n \n\nimport { useState, useEffect } from 'react';\n\nconst useFetch = (url) => {\n  const [data, setData] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    // abort controller\n    const abortCont = new AbortController(); // this is used to stop the fetching of data when we switch the page\n\n\n    setTimeout(() => {\n      fetch(url,{signal: abortCont.signal})\n      .then(res => {\n        if (!res.ok) { // error coming back from server\n          throw Error('could not fetch the data for that resource');\n        } \n        return res.json();\n      })\n      .then(data => {\n        setIsPending(false);\n        setData(data);\n        setError(null);\n      })\n      .catch(err => {\n        // auto catches network / connection error\n        if (err.name === 'AbortError') {\n          console.log('fetch aborted')\n        }\n        setIsPending(false);\n        setError(err.message);\n      })\n    }, 1000);\n\n    return () => abortCont.abort(); // cleanup function\n\n  }, [url])\n\n  return { data, isPending, error };\n}\n \nexport default useFetch;\n\n\n\n\n// uwe will use cleanup function to stop the fetching of data when we switch the page\n\n\n// abort controller is used to stop the fetching of data when we switch the page"],"mappings":";AAGA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,MAAMC,QAAQ,GAAIC,GAAG,IAAK;EAAAC,EAAA;EACxB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd;IACA,MAAMU,SAAS,GAAG,IAAIC,eAAe,CAAC,CAAC,CAAC,CAAC;;IAGzCC,UAAU,CAAC,MAAM;MACfC,KAAK,CAACX,GAAG,EAAC;QAACY,MAAM,EAAEJ,SAAS,CAACI;MAAM,CAAC,CAAC,CACpCC,IAAI,CAACC,GAAG,IAAI;QACX,IAAI,CAACA,GAAG,CAACC,EAAE,EAAE;UAAE;UACb,MAAMC,KAAK,CAAC,4CAA4C,CAAC;QAC3D;QACA,OAAOF,GAAG,CAACG,IAAI,CAAC,CAAC;MACnB,CAAC,CAAC,CACDJ,IAAI,CAACX,IAAI,IAAI;QACZG,YAAY,CAAC,KAAK,CAAC;QACnBF,OAAO,CAACD,IAAI,CAAC;QACbK,QAAQ,CAAC,IAAI,CAAC;MAChB,CAAC,CAAC,CACDW,KAAK,CAACC,GAAG,IAAI;QACZ;QACA,IAAIA,GAAG,CAACC,IAAI,KAAK,YAAY,EAAE;UAC7BC,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;QAC9B;QACAjB,YAAY,CAAC,KAAK,CAAC;QACnBE,QAAQ,CAACY,GAAG,CAACI,OAAO,CAAC;MACvB,CAAC,CAAC;IACJ,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAMf,SAAS,CAACgB,KAAK,CAAC,CAAC,CAAC,CAAC;EAElC,CAAC,EAAE,CAACxB,GAAG,CAAC,CAAC;EAET,OAAO;IAAEE,IAAI;IAAEE,SAAS;IAAEE;EAAM,CAAC;AACnC,CAAC;AAAAL,EAAA,CAtCKF,QAAQ;AAwCd,eAAeA,QAAQ;;AAKvB;;AAGA"},"metadata":{},"sourceType":"module","externalDependencies":[]}